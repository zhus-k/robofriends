{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundary.js","constants.js","containers/App.js","actions.js","reducers.js","index.js"],"names":["Card","onEnter","event","setState","timeoutID","setTimeout","isHovered","resetCard","delay","clearTimeout","state","this","props","name","email","id","phone","website","className","onMouseLeave","onMouseEnter","src","alt","Component","CardList","robots","map","user","i","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","style","overflowY","height","children","ErrorBoundary","hasError","error","info","CHANGE_SEARCH_FIELD","REQUEST_ROBOTS_PENDING","REQUEST_ROBOTS_SUCCESS","REQUEST_ROBOTS_FAILED","App","onRequestRobots","searchField","onSearchChange","isPending","filteredRobots","filter","robot","toLowerCase","includes","connect","searchRobots","requestRobots","dispatch","text","target","value","payload","fetch","then","response","json","data","catch","err","initialStateSearch","initialStateRobots","rootReducer","combineReducers","action","Object","assign","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"wQAmDeA,E,kDAhDX,aAAc,IAAD,8BACT,gBAQJC,QAAU,SAACC,GACP,EAAKC,SAAS,CAACC,UAAWC,YAAW,WACjC,EAAKF,SAAS,CAACG,WAAW,MAC3B,QAZM,EAiBbC,UAAY,SAACC,GACTC,aAAa,EAAKC,MAAMN,WACxB,EAAKD,SAAS,CAACC,UAAW,EAAGE,WAAW,KAjBxC,EAAKI,MAAQ,CACTJ,WAAW,EACXF,UAAW,GAJN,E,0CAsBb,WACI,MAA6CO,KAAKC,MAA1CC,EAAR,EAAQA,KAAOC,EAAf,EAAeA,MAAOC,EAAtB,EAAsBA,GAAIC,EAA1B,EAA0BA,MAAOC,EAAjC,EAAiCA,QAEjC,OACIN,KAAKD,MAAMJ,UAEX,qBAAKY,UAAU,sEAAsEC,aAAeR,KAAKJ,UAAzG,SACI,sBAAKW,UAAU,uBAAf,UACI,oBAAIA,UAAU,GAAd,SAAmBL,IACnB,mBAAGK,UAAU,GAAb,SAAkBJ,IAClB,mBAAGI,UAAU,GAAb,SAAkBF,IAClB,mBAAGE,UAAU,GAAb,SAAkBD,SAI1B,sBAAKC,UAAU,sEAAsEE,aAAeT,KAAKV,QAAUkB,aAAeR,KAAKJ,UAAvI,UACI,qBAAKc,IAAG,+BAA0BN,EAA1B,YAAwCO,IAAI,KACpD,sBAAKJ,UAAU,uBAAf,UACI,oBAAIA,UAAU,GAAd,SAAmBL,IACnB,mBAAGK,UAAU,GAAb,SAAkBJ,c,GA1CnBS,aCsBJC,EArBE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAChB,OACI,qBAAKP,UAAU,iBAAf,SAEQO,EAAOC,KAAI,SAACC,EAAMC,GACd,OACI,cAAC,EAAD,CAEAb,GAAKU,EAAOG,GAAGb,GACfF,KAAOY,EAAOG,GAAGf,KACjBC,MAAQW,EAAOG,GAAGd,MAClBE,MAAQS,EAAOG,GAAGZ,MAClBC,QAAUQ,EAAOG,GAAGX,SALdW,SCKfC,EAbG,SAAC,GAAkC,EAAhCC,YAAiC,IAApBC,EAAmB,EAAnBA,aAC9B,OACI,qBAAKb,UAAU,MAAf,SACI,uBACIA,UAAU,kDACVc,KAAK,SACLC,YAAY,gBACZC,SAAWH,OCCZI,EARA,SAACvB,GACZ,OACI,qBAAKwB,MAAO,CAACC,UAAW,SAAUC,OAAQ,SAA1C,SACK1B,EAAM2B,YCoBHC,E,kDAtBZ,WAAY5B,GAAQ,IAAD,8BACf,cAAMA,IACDF,MACL,CACI+B,UAAU,GAJC,E,qDAQnB,SAAkBC,EAAOC,GACrBhC,KAAKR,SAAS,CAACsC,UAAU,M,oBAG7B,WACI,OAAI9B,KAAKD,MAAM+B,SAEJ,6DAEJ9B,KAAKC,MAAM2B,a,GAlBGhB,aCFhBqB,G,YAAsB,uBAEtBC,EAAyB,yBACzBC,EAAyB,yBACzBC,EAAwB,wBCsB/BC,E,uKAEF,WACIrC,KAAKC,MAAMqC,oB,oBAGf,WACI,MAA2DtC,KAAKC,MAAxDsC,EAAR,EAAQA,YAAaC,EAArB,EAAqBA,eAAgB1B,EAArC,EAAqCA,OAAQ2B,EAA7C,EAA6CA,UAEvCC,EAAiB5B,EAAO6B,QAAQ,SAAAC,GAClC,OAAOA,EAAM1C,KAAK2C,cAAcC,SAASP,EAAYM,kBAGzD,OAAOJ,EACH,oBAAIlC,UAAU,KAAd,wBAGA,sBAAKA,UAAU,KAAf,UACI,oBAAIA,UAAU,UAAd,yBACA,qBAAKA,UAAU,YACf,cAAC,EAAD,CAAWa,aAAeoB,IAC1B,cAAC,EAAD,UACI,cAAC,EAAD,UACI,cAAC,EAAD,CAAU1B,OAAS4B,e,GAvBzB9B,aA+BHmC,eA/CS,SAAAhD,GACpB,MAAO,CACHwC,YAAaxC,EAAMiD,aAAaT,YAChCzB,OAAQf,EAAMkD,cAAcnC,OAC5B2B,UAAW1C,EAAMkD,cAAcR,UAC/BV,MAAOhC,EAAMkD,cAAclB,UAIR,SAAAmB,GACvB,MAAO,CACHV,eAAgB,SAAAjD,GAAK,OAAI2D,GCdHC,EDc2B5D,EAAM6D,OAAOC,MCd/B,CACnChC,KAAMY,EACNqB,QAASH,KAFiB,IAAAA,GDetBb,gBAAiB,kBAAMY,GCVI,SAAAA,GAC/BA,EAAS,CACL7B,KAAMa,IAEVqB,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAI,OAAIT,EAAS,CACnB7B,KAAMc,EACNmB,QAASK,OAEZC,OAAM,SAAAC,GAAG,OAAIX,EAAS,CACnB7B,KAAMe,EACNkB,QAASO,cDiCFd,CAA6CV,GElDtDyB,EAAqB,CACvBvB,YAAa,IAYXwB,EAAqB,CACvBtB,WAAW,EACX3B,OAAQ,GACRiB,MAAO,ICLLiC,EAAcC,YAAgB,CAAEjB,aDPV,WAAgD,IAA9CjD,EAA6C,uDAArC+D,EAAoBI,EAAiB,uDAAR,GAC/D,OAAOA,EAAO7C,OACLY,EACMkC,OAAOC,OAAO,GAAIrE,EAAO,CAAEwC,YAAa2B,EAAOZ,UAE/CvD,GCEiCkD,cDQvB,WAAgD,IAA9ClD,EAA6C,uDAArCgE,EAAoBG,EAAiB,uDAAR,GAChE,OAAOA,EAAO7C,MACV,KAAKa,EACD,OAAOiC,OAAOC,OAAO,GAAIrE,EAAO,CAAE0C,WAAW,IACjD,KAAKN,EACD,OAAOgC,OAAOC,OAAO,GAAIrE,EAAO,CAAEe,OAAQoD,EAAOZ,QAASb,WAAW,IACzE,KAAKL,EACD,OAAO+B,OAAOC,OAAO,GAAIrE,EAAO,CAAEgC,MAAOmC,EAAOZ,QAASb,WAAW,IACxE,QACI,OAAO1C,MChBbsE,EAAQC,YAAYN,EAAaO,IAAe,WAAf,GAAgBC,KAAhB,mBARtB,OAUjBC,IAASC,OACP,cAAC,IAAD,CAAUL,MAAOA,EAAjB,SACE,cAAC,EAAD,MAEFM,SAASC,eAAe,W","file":"static/js/main.9f53417b.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass Card extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            isHovered: false,\r\n            timeoutID: 0,\r\n        }\r\n    }\r\n\r\n    // Sets a delay before setting isHovered\r\n    onEnter = (event) => {\r\n        this.setState({timeoutID: setTimeout(() => {\r\n            this.setState({isHovered: true});\r\n        }, 1000)})\r\n        \r\n    }\r\n\r\n    // Resets a card's isHovered state\r\n    resetCard = (delay) => {\r\n        clearTimeout(this.state.timeoutID);\r\n        this.setState({timeoutID: 0, isHovered: false});\r\n    }\r\n\r\n    render(){\r\n        const { name , email, id, phone, website } = this.props;\r\n\r\n        return (\r\n            this.state.isHovered\r\n            ?\r\n            <div className='bg-light-yellow dib br3 pa3 ma2 grow bw2 shadow-5 tc grid-item card' onMouseLeave={ this.resetCard } >\r\n                <div className='br2 shadow-1 infobox'>\r\n                    <h2 className=''>{ name }</h2>\r\n                    <p className=''>{ email }</p>\r\n                    <p className=''>{ phone }</p>\r\n                    <p className=''>{ website }</p>\r\n                </div>\r\n            </div>\r\n            :\r\n            <div className='bg-light-yellow dib br3 pa3 ma2 grow bw2 shadow-5 tc grid-item card' onMouseEnter={ this.onEnter } onMouseLeave={ this.resetCard }>\r\n                <img src={`https://robohash.org/${id}?200x200`} alt=\"\" />\r\n                <div className='br2 shadow-1 infobox'>\r\n                    <h2 className=''>{ name }</h2>\r\n                    <p className=''>{ email }</p>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({ robots }) => {\r\n    return (\r\n        <div className='grid-container'>\r\n            { \r\n                robots.map((user, i) => {\r\n                    return (\r\n                        <Card\r\n                        key={ i }\r\n                        id={ robots[i].id }\r\n                        name={ robots[i].name }\r\n                        email={ robots[i].email }\r\n                        phone={ robots[i].phone }\r\n                        website={ robots[i].website }\r\n                        />\r\n                    );\r\n                })\r\n             }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CardList;","import React from 'react'\r\n\r\nconst SearchBox = ({ searchfield, searchChange }) => {\r\n    return (\r\n        <div className='pa2'>\r\n            <input\r\n                className='pa3 ba b--green bg-lightest-blue code searchbox'\r\n                type='search'\r\n                placeholder='search robots'\r\n                onChange={ searchChange }\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchBox;","import React from 'react'\r\n\r\nconst Scroll = (props) => {\r\n    return (\r\n        <div style={{overflowY: 'scroll', height: '60rem'}}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Scroll;","import React, { Component } from 'react';\r\n\r\n class ErrorBoundary extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state =\r\n        {\r\n            hasError: false\r\n        }\r\n    }\r\n\r\n    componentDidCatch(error, info) {\r\n        this.setState({hasError: true});\r\n    }\r\n\r\n    render () {\r\n        if (this.state.hasError)\r\n        {\r\n            return <h1>Oops. An Error has occured.</h1>\r\n        }\r\n        return this.props.children;\r\n    }\r\n\r\n }\r\n\r\n export default ErrorBoundary;\r\n","export const CHANGE_SEARCH_FIELD = 'CHANGE_SEARCH_FIELD';\r\n\r\nexport const REQUEST_ROBOTS_PENDING = 'REQUEST_ROBOTS_PENDING';\r\nexport const REQUEST_ROBOTS_SUCCESS = 'REQUEST_ROBOTS_SUCCESS';\r\nexport const REQUEST_ROBOTS_FAILED = 'REQUEST_ROBOTS_FAILED';","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport Scroll from '../components/Scroll';\r\nimport ErrorBoundary from '../components/ErrorBoundary';\r\nimport './App.css';\r\nimport 'tachyons';\r\nimport { requestRobots, setSearchField } from '../actions';\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        searchField: state.searchRobots.searchField,\r\n        robots: state.requestRobots.robots,\r\n        isPending: state.requestRobots.isPending,\r\n        error: state.requestRobots.error\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onSearchChange: event => dispatch(setSearchField(event.target.value)),\r\n        onRequestRobots: () => dispatch(requestRobots())\r\n    }\r\n}\r\n\r\nclass App extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.onRequestRobots();\r\n    }\r\n\r\n    render() {\r\n        const { searchField, onSearchChange, robots, isPending } = this.props;\r\n    \r\n        const filteredRobots = robots.filter( robot => {\r\n            return robot.name.toLowerCase().includes(searchField.toLowerCase());\r\n        });\r\n\r\n        return isPending ?\r\n            <h1 className='tc'>Loading...</h1>\r\n        :\r\n            (\r\n            <div className='tc'>\r\n                <h1 className='blanka4'>RoboFriends</h1>\r\n                <div className='divider'></div>\r\n                <SearchBox searchChange={ onSearchChange }/>\r\n                <Scroll>\r\n                    <ErrorBoundary>\r\n                        <CardList robots={ filteredRobots }/>\r\n                    </ErrorBoundary>\r\n                </Scroll>\r\n            </div>\r\n            );\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","import {\r\n    CHANGE_SEARCH_FIELD,\r\n    REQUEST_ROBOTS_PENDING,\r\n    REQUEST_ROBOTS_SUCCESS,\r\n    REQUEST_ROBOTS_FAILED,\r\n} from './constants';\r\n\r\nexport const setSearchField = text => ({\r\n    type: CHANGE_SEARCH_FIELD,\r\n    payload: text,\r\n});\r\n\r\nexport const requestRobots = () => dispatch => {\r\n    dispatch({\r\n        type: REQUEST_ROBOTS_PENDING\r\n    });\r\n    fetch('https://jsonplaceholder.typicode.com/users')\r\n    .then(response => response.json())\r\n    .then(data => dispatch({\r\n        type: REQUEST_ROBOTS_SUCCESS,\r\n        payload: data\r\n    }))\r\n    .catch(err => dispatch({\r\n        type: REQUEST_ROBOTS_FAILED,\r\n        payload: err\r\n    }));\r\n}","import {\r\n    CHANGE_SEARCH_FIELD,\r\n    REQUEST_ROBOTS_PENDING,\r\n    REQUEST_ROBOTS_SUCCESS,\r\n    REQUEST_ROBOTS_FAILED,\r\n} from './constants.js';\r\n\r\nconst initialStateSearch = {\r\n    searchField: '',\r\n}\r\n\r\nexport const searchRobots = ( state = initialStateSearch, action = {} ) => {\r\n    switch(action.type) {\r\n        case CHANGE_SEARCH_FIELD:\r\n            return Object.assign({}, state, { searchField: action.payload } );\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst initialStateRobots = {\r\n    isPending: false,\r\n    robots: [],\r\n    error: '',\r\n}\r\n\r\nexport const requestRobots = ( state = initialStateRobots, action = {} ) => {\r\n    switch(action.type) {\r\n        case REQUEST_ROBOTS_PENDING:\r\n            return Object.assign({}, state, { isPending: true })\r\n        case REQUEST_ROBOTS_SUCCESS:\r\n            return Object.assign({}, state, { robots: action.payload, isPending: false })\r\n        case REQUEST_ROBOTS_FAILED:\r\n            return Object.assign({}, state, { error: action.payload, isPending: false })\r\n        default:\r\n            return state;\r\n    }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux'; \r\nimport { createStore, applyMiddleware, combineReducers } from 'redux';\r\nimport { createLogger } from 'redux-logger';\r\nimport thunk from 'redux-thunk';\r\nimport './index.css';\r\nimport App from './containers/App';\r\nimport 'tachyons';\r\nimport { searchRobots, requestRobots } from './reducers';\r\n\r\nlet middleware = [];\r\n\r\nif (process.env.NODE_ENV !== 'production') {\r\n  const logger = createLogger();\r\n  middleware = [...middleware, logger];\r\n}\r\n\r\nconst rootReducer = combineReducers({ searchRobots, requestRobots });\r\nconst store = createStore(rootReducer, applyMiddleware(thunk, ...middleware));\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}