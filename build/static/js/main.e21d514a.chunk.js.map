{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundary.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","src","alt","CardList","robots","map","user","i","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundary","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","target","value","fetch","then","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAceA,EAZF,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,KAAOC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,GAC1B,OACI,sBAAKC,UAAU,sDAAf,UACI,qBAAKC,IAAG,+BAA0BF,EAA1B,YAAwCG,IAAI,KACpD,gCACI,6BAAML,IACN,4BAAKC,WCcNK,EAnBE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAChB,OACI,8BAEQA,EAAOC,KAAI,SAACC,EAAMC,GACd,OACI,cAAC,EAAD,CAEAR,GAAKK,EAAOG,GAAGR,GACfF,KAAOO,EAAOG,GAAGV,KACjBC,MAAQM,EAAOG,GAAGT,OAHZS,SCKfC,EAbG,SAAC,GAAkC,EAAhCC,YAAiC,IAApBC,EAAmB,EAAnBA,aAC9B,OACI,qBAAKV,UAAU,MAAf,SACI,uBACIA,UAAU,mCACVW,KAAK,SACLC,YAAY,gBACZC,SAAWH,OCCZI,EARA,SAACC,GACZ,OACI,qBAAKC,MAAO,CAACC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,SAArE,SACKJ,EAAMK,YCoBHC,E,kDAtBZ,WAAYN,GAAQ,IAAD,8BACf,cAAMA,IACDO,MACL,CACIC,UAAU,GAJC,E,qDAQnB,SAAkBC,EAAOC,GACrBC,KAAKC,SAAS,CAACJ,UAAU,M,oBAG7B,WACI,OAAIG,KAAKJ,MAAMC,SAEJ,6DAEJG,KAAKX,MAAMK,a,GAlBGQ,aC8CdC,G,6DAvCX,aAAe,IAAD,8BACV,gBAaJC,eAAiB,SAACC,GACd,EAAKJ,SAAS,CAAElB,YAAasB,EAAMC,OAAOC,SAb1C,EAAKX,MAAQ,CACTlB,OAAQ,GACRK,YAAa,IAJP,E,qDAQd,WAAqB,IAAD,OAChByB,MAAM,8CACDC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKX,SAAS,CAACvB,OAAQkC,S,oBAO9C,WACI,MAAgCZ,KAAKJ,MAA7BlB,EAAR,EAAQA,OAAQK,EAAhB,EAAgBA,YACV8B,EAAiBnC,EAAOoC,QAAQ,SAAAC,GAClC,OAAOA,EAAM5C,KAAK6C,cAAcC,SAASlC,EAAYiC,kBAGzD,OAAStC,EAAOwC,OAGZ,sBAAK5C,UAAU,KAAf,UACI,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWU,aAAegB,KAAKI,iBAC/B,cAAC,EAAD,UACI,cAAC,EAAD,UACI,cAAC,EAAD,CAAU1B,OAASmC,WAP/B,oBAAIvC,UAAU,KAAd,4B,GA1BM4B,cCIHiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.e21d514a.chunk.js","sourcesContent":["import React from 'react';\n\nconst Card = ({ name , email, id }) => {\n    return (\n        <div className='bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5 tc'>\n            <img src={`https://robohash.org/${id}?200x200`} alt=\"\" />\n            <div>\n                <h2>{ name }</h2>\n                <p>{ email }</p>\n            </div>\n        </div>\n    );\n}\n\nexport default Card;","import React from 'react';\nimport Card from './Card';\n\nconst CardList = ({ robots }) => {\n    return (\n        <div>\n            { \n                robots.map((user, i) => {\n                    return (\n                        <Card\n                        key={ i }\n                        id={ robots[i].id }\n                        name={ robots[i].name }\n                        email={ robots[i].email }\n                        />\n                    );\n                })\n             }\n        </div>\n    );\n}\n\nexport default CardList;","import React from 'react'\n\nconst SearchBox = ({ searchfield, searchChange }) => {\n    return (\n        <div className='pa2'>\n            <input\n                className='pa3 ba b--green bg-lightest-blue'\n                type='search'\n                placeholder='search robots'\n                onChange={ searchChange }\n            />\n        </div>\n    )\n}\n\nexport default SearchBox;","import React from 'react'\n\nconst Scroll = (props) => {\n    return (\n        <div style={{overflowY: 'scroll', border: '1px solid black', height: '800px'}}>\n            {props.children}\n        </div>\n    );\n};\n\nexport default Scroll;","import React, { Component } from 'react';\n\n class ErrorBoundary extends Component {\n    constructor(props) {\n        super(props);\n        this.state =\n        {\n            hasError: false\n        }\n    }\n\n    componentDidCatch(error, info) {\n        this.setState({hasError: true});\n    }\n\n    render () {\n        if (this.state.hasError)\n        {\n            return <h1>Oops. An Error has occured.</h1>\n        }\n        return this.props.children;\n    }\n\n }\n\n export default ErrorBoundary;\n","import React, { Component } from 'react';\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox';\nimport Scroll from '../components/Scroll';\nimport ErrorBoundary from '../components/ErrorBoundary';\nimport './App.css';\nimport 'tachyons';\n\nclass App extends Component {\n    constructor() {\n        super();\n        this.state = {\n            robots: [],\n            searchfield: \"\"\n        }\n    }\n\n    componentDidMount() {\n        fetch('https://jsonplaceholder.typicode.com/users')\n            .then(response => response.json())\n            .then(users => this.setState({robots: users }));\n    }\n\n    onSearchChange = (event) => {\n        this.setState({ searchfield: event.target.value });\n    }\n    \n    render() {\n        const { robots, searchfield } = this.state;\n        const filteredRobots = robots.filter( robot => {\n            return robot.name.toLowerCase().includes(searchfield.toLowerCase());\n        });\n\n        return (!robots.length) ?\n            <h1 className='tc'>Loading...</h1>\n        :\n            <div className='tc'>\n                <h1 className='f1'>RoboFriends</h1>\n                <SearchBox searchChange={ this.onSearchChange }/>\n                <Scroll>\n                    <ErrorBoundary>\n                        <CardList robots={ filteredRobots }/>\n                    </ErrorBoundary>\n                </Scroll>\n            </div>\n    };\n};\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App'\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}